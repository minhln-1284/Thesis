$( document ).on("turbolinks:load", function() {

  var mess = document.querySelectorAll('.alert-message');
  for (let i = 0; i < mess.length; i++) {
    alertDone(I18n.alert.message, mess[i].innerHTML)
  }

  var success = document.querySelectorAll('.alert-success');
  for (let i = 0; i < success.length; i++) {
    toastr.success(success[i].innerHTML, "", {"closeButton": true})
  }

  var danger = document.querySelectorAll('.alert-danger');
  for (let i = 0; i < danger.length; i++) {
    toastr.error(danger[i].innerHTML, "", {"closeButton": true})
  }

  var infor = document.querySelectorAll('.alert-infor');
  for (let i = 0; i < infor.length; i++) {
    toastr.infor(infor[i].innerHTML, "", {"closeButton": true})
  }

  var warning = document.querySelectorAll('.alert-warning');
  for (let i = 0; i < warning.length; i++) {
    toastr.warning(warning[i].innerHTML, "", {"closeButton": true})
  }

  $(".delete_category").on("click", function(){
    event.preventDefault();
    let urlRequest = $(this).data('url');
    let that = $(this);
    Swal.fire({
      title: I18n.alert.check1,
      text: I18n.alert.check,
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: I18n.alert.yes_delete,
      cancelButtonText: I18n.alert.cancel
    }).then((result) => {
      if (result.value) {
        $.ajax({
          type: 'DELETE',
          dataType: 'json',
          url: urlRequest,
          success: function (data) {
            if (data.code == 200) {
              that.parent().parent().remove();
              alertSuccess(data.message);
            }
          },
          error: function () {
            alertError(data.message);
          }
        });
      }
    })
  })

  $(".show_user").on("click", function(){
    event.preventDefault();
    let urlRequest = $(this).data('url');
    let urlActivate = $(this).data('url-activate');
    $.ajax({
      type: 'GET',
      dataType: 'json',
      url: urlRequest,
      success: function (data) {
        if (data.code == 200) {
          $("#user_name").html(data.user.name)
          $("#user_email").html(data.user.email)
          $("#user_des").html(data.user.description)
          $("#user_url").data("url", urlActivate);
        }
      },
      error: function () {
        alertError(data.message);
      }
    })
  })

  $("#user_url").on("click", function(){
    event.preventDefault();
    let urlRequest = $(this).data('url');
    let that = $(this);
    $.ajax({
      type: 'PUT',
      dataType: 'json',
      url: urlRequest,
      success: function (data) {
        if (data.code == 200) {
          that.addClass("no_edit")
          that.html(I18n.manager)
          toastr.success(I18n.users.activate_ss, "", {"closeButton": true})
        }else{
          toastr.error(I18n.users.activate_ff, "", {"closeButton": true})
        }
      },
      error: function () {
        alertError(data.message);
      }
    })
  })

  $(".btn-reset-cart").on("click",function(){
    $(".count_book").html("0")
    $(".table_book>tr").remove();
    Swal.fire({
      icon: "success",
      title: I18n.reset_cart,
    })
  })

  $(".order").on("click",function(){
    order_book($(this))
  })

  $("#btn-comment").on("click", function(){
    var that = $(this)
    var comment = {
      content: $("#comment").val(),
      user_id: that.data("user"),
      book_id: that.data("book"),
      parent_id: 0,
    }
    $.ajax({
      type: 'POST',
      dataType: 'json',
      url: "/comments",
      data: {
        comment: comment,
        content: $("#comment").val(),
        user_id: that.data("user"),
        book_id: that.data("book"),
      },
      success: function (data) {
      },
      error: function () {
      }
    })
  })

  $(".answer").on("click", function(){
    $("#add-parent").val($(this).data("id"))
  })

  $(".toggle_check").on("click", function(){
    var source = this
    checkboxes = document.getElementsByName('foo');
    for(var i=0, n=checkboxes.length;i<n;i++) {
      checkboxes[i].checked = source.checked;
    }
  })

  $(".btn_order_book").on("click", function(){
    var today = new Date();
    var dd = String(today.getDate()).padStart(2, '0');
    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
    var yyyy = today.getFullYear();
    today = yyyy + '-' + mm + '-' + dd;
    var start = $("#date_start").val()
    var end = $("#date_end").val()
    var note = $("#note_user").val()
    var status = "pending"
    if(start == "" || end == "" || note == ""){
      toastr.error( I18n.alert.input, "", {"closeButton": true})
      return
    }
    if(start < today){
      toastr.error( I18n.alert.input_start, "", {"closeButton": true})
      return
    }
    if(start >= end){
      toastr.error( I18n.alert.start_end, "", {"closeButton": true})
      return
    }
    var order = {
      date_start: start,
      date_return: end,
      note_user: note,
      user_id: $(".order").data("user-id"),
      order_details_attributes: [],
      status: status,
    };
    var count = 0;
    var checkboxes = document.getElementsByName('foo')
    var order_book = document.querySelectorAll(".order_book")
    var quantity = document.querySelectorAll(".quantity")
    for(var i=0; i < order_book.length - 1; i++){
      if(checkboxes[i].checked == true){
        var book = {
          book_id : order_book[i].dataset.id,
          quantity : quantity[i].value,
          quantity_real: quantity[i].value,
        }
        order.order_details_attributes[count] = book
        count++
      }
    }
    $.ajax({
      type: 'POST',
      dataType: 'json',
      url: "/order",
      data: {
        order: order
      },
      success: function (data) {
        $(".btn-close").trigger('click')
        Swal.fire({
          title: '<strong>' + I18n.mess + '</strong>',
          icon: 'success',
          html: I18n.order.success,
          showCloseButton: true,
          showCancelButton: true,
          focusConfirm: false,
          confirmButtonText: '<i class="fas fa-book"></i> ' + I18n.go_library,
          cancelButtonText: I18n.close,
        }).then((result) => {
          if (result.isConfirmed) {
            window.location = $(".order").data("url-order-user")
          }
        })
      },
      error: function () {
        alertError(data.message);
      }
    })
  })

  function alertDone(title,content){
    Swal.fire({
      title: title,
      html: '<b>'+content+'<b>',
      timerProgressBar: true,
      showCloseButton: true,
      timer: 4000,
      showCancelButton: true,
      focusConfirm: true,
    })
  }

  function alertError(){
    Swal.fire({
      icon: "Error",
      title: I18n.alert.error,
    })
  }

  function alertSuccess(message) {
    Swal.fire(
      I18n.alert.delete_icon,
      message,
      'success'
    )
  }

  function order_book(that) {
    if(that.data("login") == "not_login"){
      is_login()
    }else{
      let arr = []
      let count = 0
      var checkboxes = document.getElementsByName('foo')
      var order_book = document.querySelectorAll(".order_book")
      var quantity = document.querySelectorAll(".quantity")
      for(var i=0; i < order_book.length - 1; i++){
        if(checkboxes[i].checked == true){
          count++;
        }
      }
      if(count<1){
        Swal.fire({
          icon: "error",
          title: I18n.order.error_order,
        })
      }else{
        $(".books_item").html(count)
        $('#modal_none').trigger('click')
      }
    }
  }

  function is_login() {
    Swal.fire({
      title: '<strong>' + I18n.need +' '+ I18n.log_in + '</strong>',
      icon: 'info',
      html: I18n.order.login,
      showCloseButton: true,
      showCancelButton: true,
      focusConfirm: false,
      confirmButtonText: '<i class="fas fa-sign-in-alt"></i> ' + I18n.log_in,
      cancelButtonText: I18n.close,
    }).then((result) => {
      if (result.isConfirmed) {
        window.location = $('.order').data("url")
      }
    })
  }

});
